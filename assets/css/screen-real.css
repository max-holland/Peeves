@import url(//fonts.googleapis.com/css?family=Merriweather:900);
    @import url(//fonts.googleapis.com/css?family=Source+Sans+Pro: 300, 400, 700, 900);
    h2 {
    font-size: 31px;
    line-height: 1.4em;
}
p {
    font-size: 18px;
    line-height: 1.7em;
    font-weight: 400;
}
@media screen and (max-width:400px) {
    @-ms-viewport {
    width: 320px;
}
}
@media screen {
    .clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
}
.grid-container:before, .clearfix:before, .sidebar:before, .main-header:before, .main-section:before, .post:before, .post section:before, .post footer:before, .post footer ul:before, .post-page-post .post-page-share:before, .post-page-post .post-page-author:before, .post-page-post .post-page-tags:before, .post-page-post .post-page-comments:before, .about-page-post header:before, .about-page-post header .about-profile-wrapper:before, .grid-container:after, .clearfix:after, .sidebar:after, .main-header:after, .main-section:after, .post:after, .post section:after, .post footer:after, .post footer ul:after, .post-page-post .post-page-share:after, .post-page-post .post-page-author:after, .post-page-post .post-page-tags:after, .post-page-post .post-page-comments:after, .about-page-post header:after, .about-page-post header .about-profile-wrapper:after {
    content: ".";
    display: block;
    overflow: hidden;
    visibility: hidden;
    font-size: 0;
    line-height: 0;
    width: 0;
    height: 0;
}
.grid-container:after, .clearfix:after, .sidebar:after, .main-header:after, .main-section:after, .post:after, .post section:after, .post footer:after, .post footer ul:after, .post-page-post .post-page-share:after, .post-page-post .post-page-author:after, .post-page-post .post-page-tags:after, .post-page-post .post-page-comments:after, .about-page-post header:after, .about-page-post header .about-profile-wrapper:after {
    clear: both;
}
.grid-container, .clearfix, .sidebar, .main-header, .main-section, .post, .post section, .post footer, .post footer ul, .post-page-post .post-page-share, .post-page-post .post-page-author, .post-page-post .post-page-tags, .post-page-post .post-page-comments, .about-page-post header, .about-page-post header .about-profile-wrapper {
    *zoom: 1;
}
.grid-container {
    margin-left: auto;
    margin-right: auto;
    max-width: 1200px;
    padding-left: 10px;
    padding-right: 10px;
}
.grid-5, .mobile-grid-5, .grid-10, .mobile-grid-10, .grid-15, .mobile-grid-15, .grid-20, .mobile-grid-20, .grid-25, .mobile-grid-25, .grid-30, .mobile-grid-30, .grid-35, .mobile-grid-35, .grid-40, .mobile-grid-40, .grid-45, .mobile-grid-45, .grid-50, .mobile-grid-50, .grid-55, .mobile-grid-55, .grid-60, .mobile-grid-60, .grid-65, .mobile-grid-65, .grid-70, .mobile-grid-70, .grid-75, .mobile-grid-75, .grid-80, .mobile-grid-80, .grid-85, .mobile-grid-85, .grid-90, .mobile-grid-90, .grid-95, .mobile-grid-95, .grid-100, .mobile-grid-100, .grid-33, .mobile-grid-33, .grid-66, .mobile-grid-66 {
    box-sizing: border-box;
    padding-left: 10px;
    padding-right: 10px;
    *padding-left: 0;
    *padding-right: 0;
}
.grid-5>*, .mobile-grid-5>*, .grid-10>*, .mobile-grid-10>*, .grid-15>*, .mobile-grid-15>*, .grid-20>*, .mobile-grid-20>*, .grid-25>*, .mobile-grid-25>*, .grid-30>*, .mobile-grid-30>*, .grid-35>*, .mobile-grid-35>*, .grid-40>*, .mobile-grid-40>*, .grid-45>*, .mobile-grid-45>*, .grid-50>*, .mobile-grid-50>*, .grid-55>*, .mobile-grid-55>*, .grid-60>*, .mobile-grid-60>*, .grid-65>*, .mobile-grid-65>*, .grid-70>*, .mobile-grid-70>*, .grid-75>*, .mobile-grid-75>*, .grid-80>*, .mobile-grid-80>*, .grid-85>*, .mobile-grid-85>*, .grid-90>*, .mobile-grid-90>*, .grid-95>*, .mobile-grid-95>*, .grid-100>*, .mobile-grid-100>*, .grid-33>*, .mobile-grid-33>*, .grid-66>*, .mobile-grid-66>* {
    *margin-left: expression((!this.className.match(/grid-[1-9]/) && this.currentStyle.display === "block" && this.currentStyle.width === "auto") && "10px");
    *margin-right: expression((!this.className.match(/grid-[1-9]/) && this.currentStyle.display === "block" && this.currentStyle.width === "auto") && "10px");
}
.grid-parent {
    padding-left: 0;
    padding-right: 0;
}
body {
    min-width: 320px;
}
}
@media screen and (max-width:767px) {
    .mobile-grid-100: before, .mobile-grid-100:after {
    content: ".";
    display: block;
    overflow: hidden;
    visibility: hidden;
    font-size: 0;
    line-height: 0;
    width: 0;
    height: 0;
}
.mobile-grid-100:after {
    clear: both;
}
.mobile-grid-100 {
    *zoom: 1;
}
.mobile-push-5, .mobile-pull-5, .mobile-push-10, .mobile-pull-10, .mobile-push-15, .mobile-pull-15, .mobile-push-20, .mobile-pull-20, .mobile-push-25, .mobile-pull-25, .mobile-push-30, .mobile-pull-30, .mobile-push-35, .mobile-pull-35, .mobile-push-40, .mobile-pull-40, .mobile-push-45, .mobile-pull-45, .mobile-push-50, .mobile-pull-50, .mobile-push-55, .mobile-pull-55, .mobile-push-60, .mobile-pull-60, .mobile-push-65, .mobile-pull-65, .mobile-push-70, .mobile-pull-70, .mobile-push-75, .mobile-pull-75, .mobile-push-80, .mobile-pull-80, .mobile-push-85, .mobile-pull-85, .mobile-push-90, .mobile-pull-90, .mobile-push-95, .mobile-pull-95, .mobile-push-33, .mobile-pull-33, .mobile-push-66, .mobile-pull-66 {
    position: relative;
}
.hide-on-mobile {
    display: none!important;
}
.mobile-grid-5 {
    float: left;
    width: 5%;
    *width: expression(Math.floor(0.05 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-5 {
    margin-left: 5%}
.mobile-suffix-5 {
    margin-right: 5%}
.mobile-push-5 {
    left: 5%;
    *left: expression(Math.floor(0.05 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-5 {
    left: -5%;
    *left: expression(Math.floor(-0.05 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-10 {
    float: left;
    width: 10%;
    *width: expression(Math.floor(0.1 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-10 {
    margin-left: 10%}
.mobile-suffix-10 {
    margin-right: 10%}
.mobile-push-10 {
    left: 10%;
    *left: expression(Math.floor(0.1 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-10 {
    left: -10%;
    *left: expression(Math.floor(-0.1 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-15 {
    float: left;
    width: 15%;
    *width: expression(Math.floor(0.15 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-15 {
    margin-left: 15%}
.mobile-suffix-15 {
    margin-right: 15%}
.mobile-push-15 {
    left: 15%;
    *left: expression(Math.floor(0.15 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-15 {
    left: -15%;
    *left: expression(Math.floor(-0.15 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-20 {
    float: left;
    width: 20%;
    *width: expression(Math.floor(0.2 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-20 {
    margin-left: 20%}
.mobile-suffix-20 {
    margin-right: 20%}
.mobile-push-20 {
    left: 20%;
    *left: expression(Math.floor(0.2 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-20 {
    left: -20%;
    *left: expression(Math.floor(-0.2 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-25 {
    float: left;
    width: 25%;
    *width: expression(Math.floor(0.25 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-25 {
    margin-left: 25%}
.mobile-suffix-25 {
    margin-right: 25%}
.mobile-push-25 {
    left: 25%;
    *left: expression(Math.floor(0.25 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-25 {
    left: -25%;
    *left: expression(Math.floor(-0.25 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-30 {
    float: left;
    width: 30%;
    *width: expression(Math.floor(0.3 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-30 {
    margin-left: 30%}
.mobile-suffix-30 {
    margin-right: 30%}
.mobile-push-30 {
    left: 30%;
    *left: expression(Math.floor(0.3 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-30 {
    left: -30%;
    *left: expression(Math.floor(-0.3 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-35 {
    float: left;
    width: 35%;
    *width: expression(Math.floor(0.35 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-35 {
    margin-left: 35%}
.mobile-suffix-35 {
    margin-right: 35%}
.mobile-push-35 {
    left: 35%;
    *left: expression(Math.floor(0.35 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-35 {
    left: -35%;
    *left: expression(Math.floor(-0.35 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-40 {
    float: left;
    width: 40%;
    *width: expression(Math.floor(0.4 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-40 {
    margin-left: 40%}
.mobile-suffix-40 {
    margin-right: 40%}
.mobile-push-40 {
    left: 40%;
    *left: expression(Math.floor(0.4 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-40 {
    left: -40%;
    *left: expression(Math.floor(-0.4 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-45 {
    float: left;
    width: 45%;
    *width: expression(Math.floor(0.45 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-45 {
    margin-left: 45%}
.mobile-suffix-45 {
    margin-right: 45%}
.mobile-push-45 {
    left: 45%;
    *left: expression(Math.floor(0.45 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-45 {
    left: -45%;
    *left: expression(Math.floor(-0.45 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-50 {
    float: left;
    width: 50%;
    *width: expression(Math.floor(0.5 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-50 {
    margin-left: 50%}
.mobile-suffix-50 {
    margin-right: 50%}
.mobile-push-50 {
    left: 50%;
    *left: expression(Math.floor(0.5 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-50 {
    left: -50%;
    *left: expression(Math.floor(-0.5 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-55 {
    float: left;
    width: 55%;
    *width: expression(Math.floor(0.55 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-55 {
    margin-left: 55%}
.mobile-suffix-55 {
    margin-right: 55%}
.mobile-push-55 {
    left: 55%;
    *left: expression(Math.floor(0.55 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-55 {
    left: -55%;
    *left: expression(Math.floor(-0.55 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-60 {
    float: left;
    width: 60%;
    *width: expression(Math.floor(0.6 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-60 {
    margin-left: 60%}
.mobile-suffix-60 {
    margin-right: 60%}
.mobile-push-60 {
    left: 60%;
    *left: expression(Math.floor(0.6 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-60 {
    left: -60%;
    *left: expression(Math.floor(-0.6 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-65 {
    float: left;
    width: 65%;
    *width: expression(Math.floor(0.65 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-65 {
    margin-left: 65%}
.mobile-suffix-65 {
    margin-right: 65%}
.mobile-push-65 {
    left: 65%;
    *left: expression(Math.floor(0.65 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-65 {
    left: -65%;
    *left: expression(Math.floor(-0.65 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-70 {
    float: left;
    width: 70%;
    *width: expression(Math.floor(0.7 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-70 {
    margin-left: 70%}
.mobile-suffix-70 {
    margin-right: 70%}
.mobile-push-70 {
    left: 70%;
    *left: expression(Math.floor(0.7 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-70 {
    left: -70%;
    *left: expression(Math.floor(-0.7 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-75 {
    float: left;
    width: 75%;
    *width: expression(Math.floor(0.75 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-75 {
    margin-left: 75%}
.mobile-suffix-75 {
    margin-right: 75%}
.mobile-push-75 {
    left: 75%;
    *left: expression(Math.floor(0.75 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-75 {
    left: -75%;
    *left: expression(Math.floor(-0.75 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-80 {
    float: left;
    width: 80%;
    *width: expression(Math.floor(0.8 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-80 {
    margin-left: 80%}
.mobile-suffix-80 {
    margin-right: 80%}
.mobile-push-80 {
    left: 80%;
    *left: expression(Math.floor(0.8 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-80 {
    left: -80%;
    *left: expression(Math.floor(-0.8 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-85 {
    float: left;
    width: 85%;
    *width: expression(Math.floor(0.85 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-85 {
    margin-left: 85%}
.mobile-suffix-85 {
    margin-right: 85%}
.mobile-push-85 {
    left: 85%;
    *left: expression(Math.floor(0.85 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-85 {
    left: -85%;
    *left: expression(Math.floor(-0.85 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-90 {
    float: left;
    width: 90%;
    *width: expression(Math.floor(0.9 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-90 {
    margin-left: 90%}
.mobile-suffix-90 {
    margin-right: 90%}
.mobile-push-90 {
    left: 90%;
    *left: expression(Math.floor(0.9 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-90 {
    left: -90%;
    *left: expression(Math.floor(-0.9 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-95 {
    float: left;
    width: 95%;
    *width: expression(Math.floor(0.95 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-95 {
    margin-left: 95%}
.mobile-suffix-95 {
    margin-right: 95%}
.mobile-push-95 {
    left: 95%;
    *left: expression(Math.floor(0.95 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-95 {
    left: -95%;
    *left: expression(Math.floor(-0.95 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-33 {
    float: left;
    width: 33.33333%;
    *width: expression(Math.floor(0.33333 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-33 {
    margin-left: 33.33333%}
.mobile-suffix-33 {
    margin-right: 33.33333%}
.mobile-push-33 {
    left: 33.33333%;
    *left: expression(Math.floor(0.33333 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-33 {
    left: -33.33333%;
    *left: expression(Math.floor(-0.33333 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-66 {
    float: left;
    width: 66.66667%;
    *width: expression(Math.floor(0.66667 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-prefix-66 {
    margin-left: 66.66667%}
.mobile-suffix-66 {
    margin-right: 66.66667%}
.mobile-push-66 {
    left: 66.66667%;
    *left: expression(Math.floor(0.66667 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-pull-66 {
    left: -66.66667%;
    *left: expression(Math.floor(-0.66667 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.mobile-grid-100 {
    clear: both;
    width: 100%}
}
@media screen and (min-width:768px) {
    .grid-100: before, .grid-100:after {
    content: ".";
    display: block;
    overflow: hidden;
    visibility: hidden;
    font-size: 0;
    line-height: 0;
    width: 0;
    height: 0;
}
.grid-100:after {
    clear: both;
}
.grid-100 {
    *zoom: 1;
}
.push-5, .pull-5, .push-10, .pull-10, .push-15, .pull-15, .push-20, .pull-20, .push-25, .pull-25, .push-30, .pull-30, .push-35, .pull-35, .push-40, .pull-40, .push-45, .pull-45, .push-50, .pull-50, .push-55, .pull-55, .push-60, .pull-60, .push-65, .pull-65, .push-70, .pull-70, .push-75, .pull-75, .push-80, .pull-80, .push-85, .pull-85, .push-90, .pull-90, .push-95, .pull-95, .push-33, .pull-33, .push-66, .pull-66 {
    position: relative;
}
.hide-on-desktop {
    display: none!important;
}
.grid-5 {
    float: left;
    width: 5%;
    *width: expression(Math.floor(0.05 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-5 {
    margin-left: 5%}
.suffix-5 {
    margin-right: 5%}
.push-5 {
    left: 5%;
    *left: expression(Math.floor(0.05 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-5 {
    left: -5%;
    *left: expression(Math.floor(-0.05 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-10 {
    float: left;
    width: 10%;
    *width: expression(Math.floor(0.1 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-10 {
    margin-left: 10%}
.suffix-10 {
    margin-right: 10%}
.push-10 {
    left: 10%;
    *left: expression(Math.floor(0.1 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-10 {
    left: -10%;
    *left: expression(Math.floor(-0.1 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-15 {
    float: left;
    width: 15%;
    *width: expression(Math.floor(0.15 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-15 {
    margin-left: 15%}
.suffix-15 {
    margin-right: 15%}
.push-15 {
    left: 15%;
    *left: expression(Math.floor(0.15 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-15 {
    left: -15%;
    *left: expression(Math.floor(-0.15 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-20 {
    float: left;
    width: 20%;
    *width: expression(Math.floor(0.2 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-20 {
    margin-left: 20%}
.suffix-20 {
    margin-right: 20%}
.push-20 {
    left: 20%;
    *left: expression(Math.floor(0.2 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-20 {
    left: -20%;
    *left: expression(Math.floor(-0.2 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-25 {
    float: left;
    width: 25%;
    *width: expression(Math.floor(0.25 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-25 {
    margin-left: 25%}
.suffix-25 {
    margin-right: 25%}
.push-25 {
    left: 25%;
    *left: expression(Math.floor(0.25 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-25 {
    left: -25%;
    *left: expression(Math.floor(-0.25 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-30 {
    float: left;
    width: 30%;
    *width: expression(Math.floor(0.3 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-30 {
    margin-left: 30%}
.suffix-30 {
    margin-right: 30%}
.push-30 {
    left: 30%;
    *left: expression(Math.floor(0.3 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-30 {
    left: -30%;
    *left: expression(Math.floor(-0.3 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-35 {
    float: left;
    width: 35%;
    *width: expression(Math.floor(0.35 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-35 {
    margin-left: 35%}
.suffix-35 {
    margin-right: 35%}
.push-35 {
    left: 35%;
    *left: expression(Math.floor(0.35 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-35 {
    left: -35%;
    *left: expression(Math.floor(-0.35 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-40 {
    float: left;
    width: 40%;
    *width: expression(Math.floor(0.4 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-40 {
    margin-left: 40%}
.suffix-40 {
    margin-right: 40%}
.push-40 {
    left: 40%;
    *left: expression(Math.floor(0.4 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-40 {
    left: -40%;
    *left: expression(Math.floor(-0.4 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-45 {
    float: left;
    width: 45%;
    *width: expression(Math.floor(0.45 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-45 {
    margin-left: 45%}
.suffix-45 {
    margin-right: 45%}
.push-45 {
    left: 45%;
    *left: expression(Math.floor(0.45 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-45 {
    left: -45%;
    *left: expression(Math.floor(-0.45 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-50 {
    float: left;
    width: 50%;
    *width: expression(Math.floor(0.5 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-50 {
    margin-left: 50%}
.suffix-50 {
    margin-right: 50%}
.push-50 {
    left: 50%;
    *left: expression(Math.floor(0.5 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-50 {
    left: -50%;
    *left: expression(Math.floor(-0.5 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-55 {
    float: left;
    width: 55%;
    *width: expression(Math.floor(0.55 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-55 {
    margin-left: 55%}
.suffix-55 {
    margin-right: 55%}
.push-55 {
    left: 55%;
    *left: expression(Math.floor(0.55 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-55 {
    left: -55%;
    *left: expression(Math.floor(-0.55 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-60 {
    float: left;
    width: 60%;
    *width: expression(Math.floor(0.6 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-60 {
    margin-left: 60%}
.suffix-60 {
    margin-right: 60%}
.push-60 {
    left: 60%;
    *left: expression(Math.floor(0.6 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-60 {
    left: -60%;
    *left: expression(Math.floor(-0.6 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-65 {
    float: left;
    width: 65%;
    *width: expression(Math.floor(0.65 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-65 {
    margin-left: 65%}
.suffix-65 {
    margin-right: 65%}
.push-65 {
    left: 65%;
    *left: expression(Math.floor(0.65 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-65 {
    left: -65%;
    *left: expression(Math.floor(-0.65 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-70 {
    float: left;
    width: 70%;
    *width: expression(Math.floor(0.7 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-70 {
    margin-left: 70%}
.suffix-70 {
    margin-right: 70%}
.push-70 {
    left: 70%;
    *left: expression(Math.floor(0.7 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-70 {
    left: -70%;
    *left: expression(Math.floor(-0.7 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-75 {
    float: left;
    width: 75%;
    *width: expression(Math.floor(0.75 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-75 {
    margin-left: 75%}
.suffix-75 {
    margin-right: 75%}
.push-75 {
    left: 75%;
    *left: expression(Math.floor(0.75 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-75 {
    left: -75%;
    *left: expression(Math.floor(-0.75 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-80 {
    float: left;
    width: 80%;
    *width: expression(Math.floor(0.8 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-80 {
    margin-left: 80%}
.suffix-80 {
    margin-right: 80%}
.push-80 {
    left: 80%;
    *left: expression(Math.floor(0.8 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-80 {
    left: -80%;
    *left: expression(Math.floor(-0.8 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-85 {
    float: left;
    width: 85%;
    *width: expression(Math.floor(0.85 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-85 {
    margin-left: 85%}
.suffix-85 {
    margin-right: 85%}
.push-85 {
    left: 85%;
    *left: expression(Math.floor(0.85 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-85 {
    left: -85%;
    *left: expression(Math.floor(-0.85 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-90 {
    float: left;
    width: 90%;
    *width: expression(Math.floor(0.9 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-90 {
    margin-left: 90%}
.suffix-90 {
    margin-right: 90%}
.push-90 {
    left: 90%;
    *left: expression(Math.floor(0.9 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-90 {
    left: -90%;
    *left: expression(Math.floor(-0.9 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-95 {
    float: left;
    width: 95%;
    *width: expression(Math.floor(0.95 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-95 {
    margin-left: 95%}
.suffix-95 {
    margin-right: 95%}
.push-95 {
    left: 95%;
    *left: expression(Math.floor(0.95 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-95 {
    left: -95%;
    *left: expression(Math.floor(-0.95 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-33 {
    float: left;
    width: 33.33333%;
    *width: expression(Math.floor(0.33333 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-33 {
    margin-left: 33.33333%}
.suffix-33 {
    margin-right: 33.33333%}
.push-33 {
    left: 33.33333%;
    *left: expression(Math.floor(0.33333 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-33 {
    left: -33.33333%;
    *left: expression(Math.floor(-0.33333 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-66 {
    float: left;
    width: 66.66667%;
    *width: expression(Math.floor(0.66667 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.prefix-66 {
    margin-left: 66.66667%}
.suffix-66 {
    margin-right: 66.66667%}
.push-66 {
    left: 66.66667%;
    *left: expression(Math.floor(0.66667 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.pull-66 {
    left: -66.66667%;
    *left: expression(Math.floor(-0.66667 * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}
.grid-100 {
    clear: both;
    width: 100%}
}
body {
    background: #fff;
    font-family: 'Source Sans Pro', sans-serif;
    color: #222;
    overflow-x: hidden;
    margin: 0;
    padding: 0;
}
body a {
    color: inherit;
    text-decoration: none;
    transition: all .3s;
}
body a:hover {
    color: #57ad68;
    cursor: pointer;
}
.page-wrapper, #sidebar {
    transition: left .3s ease-out;
}
.page-wrapper {
    position: relative;
    left: 0;
    width: 100%;
    z-index: 0;
}
.page-wrapper.opened {
    left: 200px;
}
.sidebar {
    position: fixed;
    top: 0;
    left: -200px;
    width: 200px;
    height: 100%;
    background: #191918;
    color: #b3b3b1;
    z-index: 1;
}
.sidebar.opened {
    left: 0;
}
.sidebar ul {
    padding: 20px 30px;
    margin: 0;
    list-style: none;
}
.sidebar ul li {
    padding: 8px 0;
    font-weight: 300;
    font-size: 1em;
}
.sidebar ul li:first-child {
    margin-top: 10px;
}
.sidebar ul li a:hover {
    color: #fff;
}
.sidebar ul li i {
    margin-right: 10px;
}
.sidebar ul li:last-child {
    padding-bottom: 0;
}
.sidebar .side-header {
    font-weight: 400;
    color: #fff!important;
    margin-top: 30px;
    border-bottom: 1px solid #21211f;
    margin-bottom: 10px;
}
.sidebar .side-header:first-child {
    margin-top: 0;
}
.navbar {
    position: absolute;
    z-index: 100;
}
.navbar .menu-btn {
    top: 10px;
    left: 10px;
    border: none;
    background: 0 0;
    color: #fff;
    width: 44px;
    height: 44px;
    margin-top: 10px;
    margin-left: 10px;
    outline: none;
    font-family: 'Merriweather', serif;
    font-weight: 900;
    font-size: 27px;
    line-height: 48px;
    cursor: pointer;
    text-align: center;
    padding: 0;
}
.navbar.opened {
    left: 200px;
}
.navbar .tags-menu-btn {
    color: #333332;
}
.navbar-safari {
    transition: left .3s ease-out;
}
.navbar-safari.opened {
    left: 200px;
}
.main-header {
    width: 100%;
    height: 430px;
    background-color: #191918;
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
}
.main-header .grid-container {
    height: 100%}
.main-header .wrapper {
    height: 100%;
    width: 100%;
    background: rgba(0, 0, 0, .3);
}
.main-header .inner-header {
    height: 100%;
    text-align: center;
    color: #fff;
}
.main-header .inner-header h1 {
    font-weight: 700;
    font-size: 50px;
    margin: 0;
    padding: 0;
    line-height: 58px;
}
.main-header .inner-header h2 {
    font-size: 16px;
    padding: 0;
    margin: 8px 0 20px;
    line-height: 1.6em;
    color: rgba(255, 255, 255, .9);
    font-weight: 400;
}
.main-header .inner-header ul {
    padding: 0;
    list-style: none;
    margin: 0;
    color: rgba(255, 255, 255, .9);
}
.main-header .inner-header ul li {
    display: inline;
}
.post-page-header h1 {
    text-align: left;
    margin-bottom: 10px!important;
}
.post-page-header .author-image {
    border-radius: 50%;
    width: 25px!important;
    margin-top: 0;
    margin-right: 10px;
    float: left;
}
.post-page-header .author-info {
    float: left;
    font-weight: 300;
    font-size: 16px;
    position: relative;
    top: 2px;
    color: rgba(255, 255, 255, .9);
}
.post-page-header .table-span {
    padding-bottom: 80px;
}
.post-page-header .table-span span {
    vertical-align: bottom;
}
.post {
    width: 100%;
    position: relative;
    color: #333332;
    border-bottom: 1px solid #f2f2f0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -ms-word-break: break-word;
    word-break: break-word;
}
.post .wrapper {
    padding: 40px 0;
}
.post hr {
    display: block;
    border: 0;
    height: 1px;
    border-top: 1px solid #f2f2f0;
    margin: 40px 0;
}
.post input {
    border: 1px solid #ccc;
    padding: 8px 10px;
    font-size: 18px;
    border-radius: 3px;
    margin: 0;
}
.post img, .post iframe, .post object, .post object embed {
    width: 100%!important;
}
.post img {
    height: auto;
}
.post header {
    margin-bottom: 8px;
}
.post header h2 {
    font-weight: 700;
    margin: 0;
}
.post blockquote {
    border-left: 2px solid #57ad68;
    margin: 0 0 0 10px;
    padding-left: 10px;
}
.post blockquote, .post section {
    font-size: 18px;
    font-style: normal;
    letter-spacing: normal;
    line-height: 1.7em;
}
.post section {
    color: #4d4d4d;
}
.post section p, .post section blockquote {
    color: inherit;
    font-weight: inherit;
    font-size: inherit;
}
.post section a {
    text-decoration: underline;
}
.post section a:hover {
    text-decoration: none;
}
.post section h1, .post section h2, .post section h3, .post section h4, .post section h5, .post section h6 {
    color: #333332;
    font-weight: 700;
}
.post section h1 {
    font-size: 2em;
}
.post section h2 {
    font-size: 1.5em;
}
.post section h3 {
    font-size: 1.17em;
}
.post section h4 {
    font-size: 1em;
}
.post section h5 {
    font-size: .83em;
}
.post section h6 {
    font-size: .67em;
}
.post footer {
    color: #b3b3b1;
    font-size: 18px;
}
.post footer .post-other {
    float: right;
}
.post footer .post-other .notes {
    font-size: 16px;
    font-weight: 400;
    position: relative;
    margin-top: 1px;
    color: #ccc;
}
.post footer .author-image {
    border-radius: 50%;
    width: 25px!important;
    margin-top: 0;
    margin-right: 10px;
    float: left;
}
.post footer .author-info {
    float: left;
    font-weight: 400;
    font-size: 16px;
    position: relative;
    top: 2px;
}
.post footer ul {
    padding: 0;
    list-style: none;
}
.post footer ul li {
    float: left;
    display: inline-block;
    margin-right: 10px;
}
.post footer ul li:last-child {
    margin-right: 0;
}
.post footer ul i {
    margin-right: 5px;
}
.post-page-post .post-page-share {
    margin-top: 40px;
}
.post-page-post .post-page-share .date-posted {
    float: left;
    font-size: 14px;
}
.post-page-post .post-page-share .date-posted i {
    margin-right: 5px;
}
.post-page-post .post-page-share .share-icons {
    float: right;
}
.post-page-post .post-page-share ul {
    width: 100%;
    margin: 0;
    padding: 0;
    color: #b3b3b1;
}
.post-page-post .post-page-share ul li {
    display: inline-block;
    margin-right: 10px;
}
.post-page-post .post-page-share ul li:last-child {
    margin-right: 0;
}
.post-page-post .post-page-share ul li.share-title {
    font-size: 14px;
}
.post-page-post .post-page-author {
    width: 100%;
    overflow: auto;
    border-top: 1px solid #f2f2f0;
    margin-top: 25px;
    margin-bottom: 60px;
}
.post-page-post .post-page-author small {
    color: #b3b3b1;
    float: left;
    font-weight: 600;
    width: 100%;
    margin: 0 0 28px;
    text-transform: uppercase;
    font-size: 12px;
    letter-spacing: 1px;
}
.post-page-post .post-page-author .author-wrapper {
    width: 100%;
    position: relative;
    overflow: auto;
}
.post-page-post .post-page-author .author-wrapper ul {
    margin: 0;
    padding: 0;
    overflow: auto;
    min-height: 99px;
}
.post-page-post .post-page-author .author-wrapper ul li {
    display: inline-block;
}
.post-page-post .post-page-author .author-wrapper ul li:last-child {
    margin-left: 74px;
    font-weight: 300;
    font-size: 16px;
}
.post-page-post .post-page-author .author-wrapper img {
    width: 64px!important;
    margin: 8px 0 0;
    padding: 0;
    position: absolute;
    border-radius: 50%}
.post-page-post .post-page-author .author-wrapper h3 {
    margin: 0;
}
.post-page-post .post-page-author .author-wrapper h3 a {
    text-decoration: none;
}
.post-page-post .post-page-author .author-wrapper p {
    margin: 0;
    font-weight: 400;
    line-height: 23px;
}
.post-page-post .post-page-tags {
    width: 100%;
    overflow: auto;
    border-top: 1px solid #f2f2f0;
    margin-top: 25px;
    margin-bottom: 60px;
}
.post-page-post .post-page-tags small {
    color: #b3b3b1;
    float: left;
    font-weight: 600;
    width: 100%;
    padding: 0 0 28px;
    text-transform: uppercase;
    font-size: 12px;
    letter-spacing: 1px;
}
.post-page-post .post-page-tags p {
    margin: 0;
    font-weight: 400;
    line-height: 23px;
}
.post-page-post .post-page-tags a {
    color: inherit;
    text-decoration: none;
    transition: all .3s;
}
.post-page-post .post-page-tags a:hover {
    color: #57ad68;
    cursor: pointer;
}
.post-page-post .post-page-comments {
    border-top: 1px solid #f2f2f0;
    margin: 25px 0 0;
}
.tag-page-header {
    height: auto!important;
    background: #fff;
    color: #333332;
}
.tag-page-header h1 {
    font-size: 50px;
}
.related-posts {
    border-top: 1px solid #f2f2f0;
}
.related-posts small {
    color: #b3b3b1;
    float: left;
    font-weight: 600;
    width: 100%;
    padding: 5px 0 28px;
    text-transform: uppercase;
    font-size: 12px;
    letter-spacing: 1px;
}
.about-page-post {
    padding-top: 0;
    margin-top: -60px;
}
.about-page-post .wrapper {
    padding-top: 0;
}
.about-page-post header .about-profile-wrapper {
    width: 100%}
.about-page-post header .about-profile-img {
    padding: 5px;
    margin: auto;
    width: 120px;
    height: 120px;
    background: #fff;
    box-shadow: 0 1px 1px rgba(0, 0, 0, .3);
    border-radius: 50%}
.about-page-post header .about-profile-img img {
    margin: 0;
    padding: 0;
    width: 100%!important;
    border-radius: 50%}
.about-page-post .post-title {
    text-align: center;
    margin-top: 20px;
    font-size: 50px;
}
.post-reading-time {
    float: right!important;
}
.pagination {
    max-width: 640px;
    text-align: center;
    margin: auto;
    padding-top: 30px;
}
.pagination, .pagination .page-number {
    display: none;
}
.main-footer {
    color: #b3b3b1;
    font-weight: 300;
    font-size: 16px;
    padding: 30px 0;
    text-align: center;
}
.main-footer section {
    width: 100%;
    margin-bottom: 10px;
}
.grid-640 {
    max-width: 620px;
}
.grid-720 {
    max-width: 700px;
}
.table-span {
    display: table;
    width: 100%;
    height: 100%}
.table-span span {
    display: table-cell;
    vertical-align: middle;
}
.fluid-width-video-wrapper iframe {
    margin: 0;
}
.hide-post {
    opacity: 0;
    transition: all .2s linear;
}
.show-post {
    filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=1);
    opacity: 1;
}
.grid-container {
    padding-left: 20px;
    padding-right: 20px;
}
.browsehappy {
    margin: .2em 0;
    background: #ccc;
    color: #000;
    padding: .2em 0;
}
.gist {
    word-break: normal!important;
    font-size: 12px;
    line-height: 1.1em;
}
#infscr-loading {
    display: none!important;
}
#bg-img {
    display: none;
}
@media only screen and (min-width:480px) {
    .page-wrapper {
    position: relative;
    left: 0;
    width: 100%;
    z-index: 0;
}
.page-wrapper.opened {
    left: 280px;
}
.sidebar {
    left: -280px;
    width: 280px;
}
.sidebar.opened {
    left: 0;
}
.navbar.opened {
    left: 280px;
}
.navbar-safari {
    transition: left .3s ease-out;
}
.navbar-safari.opened {
    left: 280px;
}
}
@media only screen and (min-width:768px) {
    .page-wrapper {
    position: relative;
    left: 0;
    width: 100%;
    z-index: 0;
}
.page-wrapper.opened {
    left: 280px;
}
.sidebar {
    left: -280px;
    width: 280px;
}
.sidebar.opened {
    left: 0;
}
.navbar.opened {
    left: 280px;
}
.navbar-safari {
    transition: left .3s ease-out;
}
.navbar-safari.opened {
    left: 280px;
}
.main-header .inner-header li {
    margin-right: 10px;
}
.main-header .inner-header li:last-child {
    margin-right: 0;
}
.post-reading-time {
    float: right!important;
    margin-top: 0;
}
}
.hljs {
    display: block;
    padding: .5em;
    background: #232323;
    color: #f8f8f8;
    border-radius: 3px;
}
.hljs-shebang, .hljs-comment, .hljs-template_comment, .hljs-javadoc {
    color: #7c7c7c;
}
.hljs-keyword, .hljs-tag, .tex .hljs-command, .hljs-request, .hljs-status, .clojure .hljs-attribute {
    color: #96CBFE;
}
.hljs-sub .hljs-keyword, .method, .hljs-list .hljs-title, .nginx .hljs-title {
    color: #FFFFB6;
}
.hljs-string, .hljs-tag .hljs-value, .hljs-cdata, .hljs-filter .hljs-argument, .hljs-attr_selector, .apache .hljs-cbracket, .hljs-date, .coffeescript .hljs-attribute {
    color: #A8FF60;
}
.hljs-subst {
    color: #DAEFA3;
}
.hljs-regexp {
    color: #E9C062;
}
.hljs-title, .hljs-sub .hljs-identifier, .hljs-pi, .hljs-decorator, .tex .hljs-special, .haskell .hljs-type, .hljs-constant, .smalltalk .hljs-class, .hljs-javadoctag, .hljs-yardoctag, .hljs-phpdoc, .nginx .hljs-built_in {
    color: #FFFFB6;
}
.hljs-symbol, .ruby .hljs-symbol .hljs-string, .hljs-variable, .vbscript, .hljs-literal {
    color: #C6C5FE;
}
.css .hljs-tag {
    color: #96CBFE;
}
.css .hljs-rules .hljs-property, .css .hljs-id {
    color: #FFFFB6;
}
.css .hljs-class {
    color: #FFF;
}
.hljs-hexcolor {
    color: #C6C5FE;
}
.hljs-number {
    color: #FF73FD;
}
.coffeescript .javascript, .javascript .xml, .tex .hljs-formula, .xml .javascript, .xml .vbscript, .xml .css, .xml .hljs-cdata {
    opacity: .7;
}
.fluidbox {
    outline: none;
}
.fluidbox-overlay {
    cursor: pointer;
    cursor: -webkit-zoom-out;
    opacity: 0;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    transition: all .25s ease-in-out;
}
.fluidbox-wrap {
    margin: 0 auto;
    position: relative;
}
.fluidbox-wrap, .fluidbox-ghost {
    background-size: cover;
    background-position: center center;
    transition: all .25s ease-in-out;
}
.fluidbox-ghost {
    position: absolute;
}
.fluidbox-closed .fluidbox-ghost {
    transition-property: top, left, opacity, -webkit-transform;
    transition-property: top, left, opacity, transform;
    transition-delay: 0, 0, .25s, 0;
}
.fluidbox-closed .fluidbox-wrap img {
    transition-property: opacity;
    transition-delay: .25s;
    transition-duration: 0;
}
