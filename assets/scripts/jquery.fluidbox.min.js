! function(e, t) {
  var i = function(e, t, i) {
    var o;
    return function() {
      function s() {
        i || e.apply(a, n), o = null
      }
      var a = this,
        n = arguments;
      o ? clearTimeout(o) : i && e.apply(a, n), o = setTimeout(s, t || 100)
    }
  };
  jQuery.fn[t] = function(e) {
    return e ? this.bind("resize", i(e)) : this.trigger(t)
  }
}(jQuery, "smartresize"),
function(e) {
  e.fn.fluidbox = function(t) {
    var i = e.extend(!0, {
      viewportFill: .95,
      overlayColor: "rgba(255,255,255,.85)",
      debounceResize: !0,
      stackIndex: 1e3,
      stackIndexDelta: 10,
      closeTrigger: [{
        selector: ".fluidbox-overlay",
        event: "click"
      }, {
        selector: "document",
        event: "keyup",
        keyCode: 27
      }]
    }, t);
    i.stackIndex < i.stackIndexDelta && (i.stackIndexDelta = i.stackIndex), $fbOverlay = e("<div />", {
      "class": "fluidbox-overlay",
      css: {
        "background-color": i.overlayColor,
        "z-index": i.stackIndex
      }
    });
    var o, s = this,
      a = e(window),
      n = function() {
        e(".fluidbox-opened").trigger("click")
      },
      d = function(e) {
        var t = e.find("img"),
          i = e.find(".fluidbox-ghost"),
          o = e.find(".fluidbox-wrap"),
          s = a.scrollTop() - t.offset().top + .5 * t.data("imgHeight") * (t.data("imgScale") - 1) + .5 * (a.height() - t.data("imgHeight") * t.data("imgScale")),
          n = .5 * t.data("imgWidth") * (t.data("imgScale") - 1) + .5 * (a.width() - t.data("imgWidth") * t.data("imgScale")) - t.offset().left,
          d = t.data("imgScale");
        i.css({
          transform: "translate(" + parseInt(10 * n) / 10 + "px," + parseInt(10 * s) / 10 + "px) scale(" + parseInt(1e3 * d) / 1e3 + ")",
          top: t.offset().top - o.offset().top,
          left: t.offset().left - o.offset().left
        })
      },
      c = function() {
        s.each(function() {
          l(e(this))
        })
      },
      l = function(e) {
        function t() {
          c.imgWidth = s.width(), c.imgHeight = s.height(), c.imgRatio = s.width() / s.height(), n.css({
            width: s.width(),
            height: s.height(),
            top: s.offset().top - d.offset().top + parseInt(s.css("borderTopWidth")) + parseInt(s.css("paddingTop")),
            left: s.offset().left - d.offset().left + parseInt(s.css("borderLeftWidth")) + parseInt(s.css("paddingLeft"))
          }), c.imgScale = o > c.imgRatio ? a.height() * i.viewportFill / s.height() : a.width() * i.viewportFill / s.width()
        }
        if (o = a.width() / a.height(), e.hasClass("fluidbox")) {
          var s = e.find("img"),
            n = e.find(".fluidbox-ghost"),
            d = e.find(".fluidbox-wrap"),
            c = s.data();
          t(), s.load(t)
        }
      },
      r = function(t) {
        if (e(this).hasClass("fluidbox")) {
          var o = e(this),
            s = e(this).find("img"),
            a = e(this).find(".fluidbox-ghost"),
            n = e(this).find(".fluidbox-wrap"),
            c = {};
          0 !== e(this).data("fluidbox-state") && e(this).data("fluidbox-state") ? (o.data("fluidbox-state", 0).removeClass("fluidbox-opened").addClass("fluidbox-closed"), c.open && window.clearTimeout(c.open), c.close = window.setTimeout(function() {
            e(".fluidbox-overlay").remove(), n.css({
              "z-index": i.stackIndex - i.stackIndexDelta
            })
          }, 10), e(".fluidbox-overlay").css({
            opacity: 0
          }), a.css({
            transform: "translate(0,0) scale(1)",
            opacity: 0,
            top: s.offset().top - n.offset().top + parseInt(s.css("borderTopWidth")) + parseInt(s.css("paddingTop")),
            left: s.offset().left - n.offset().left + parseInt(s.css("borderLeftWidth")) + parseInt(s.css("paddingLeft"))
          }), s.css({
            opacity: 1
          })) : e("<img />", {
            src: s.attr("src")
          }).load(function() {
            o.append($fbOverlay).data("fluidbox-state", 1).removeClass("fluidbox-closed").addClass("fluidbox-opened"), c.close && window.clearTimeout(c.close), c.open = window.setTimeout(function() {
              e(".fluidbox-overlay").css({
                opacity: 1
              })
            }, 10), e(".fluidbox-wrap").css({
              zIndex: i.stackIndex - i.stackIndexDelta - 1
            }), n.css({
              "z-index": i.stackIndex + i.stackIndexDelta
            }), a.css({
              "background-image": "url(" + s.attr("src") + ")",
              opacity: 1
            }), s.css({
              opacity: 0
            }), e("<img />", {
              src: o.attr("href")
            }).load(function() {
              a.css({
                "background-image": "url(" + o.attr("href") + ")"
              })
            }), d(o)
          }), t.preventDefault()
        }
      };
    i.closeTrigger && e.each(i.closeTrigger, function(t) {
      var o = i.closeTrigger[t];
      "window" != o.selector ? "document" == o.selector ? o.keyCode ? e(document).on(o.event, function(e) {
        e.keyCode == o.keyCode && n()
      }) : e(document).on(o.event, n) : e(document).on(o.event, i.closeTrigger[t].selector, n) : a.on(o.event, n)
    }), s.each(function() {
      if (e(this).is("a") && 1 === e(this).children().length && e(this).children().is("img")) {
        var t = e("<div />", {
            "class": "fluidbox-wrap",
            css: {
              "z-index": i.stackIndex - i.stackIndexDelta
            }
          }),
          o = e(this);
        o.addClass("fluidbox").wrapInner(t).find("img").css({
          opacity: 1
        }).after('<div class="fluidbox-ghost" />').each(function() {
          var t = e(this);
          t.width() > 0 && t.height() > 0 ? (l(o), o.click(r)) : t.load(function() {
            l(o), o.click(r)
          })
        })
      }
    });
    var f = function() {
      c();
      var t = e("a.fluidbox.fluidbox-opened");
      t.length > 0 && d(t)
    };
    return i.debounceResize ? e(window).smartresize(f) : e(window).resize(f), s
  }
}(jQuery);